spring:
  application:
    name: api
    quartz:
      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.jobStore.dataSource: dataSource
      org.quartz.jobStore.tablePrefix: quartz.scheduler_
      org.quartz.threadPool.threadCount: "1"
      org.quartz.jobStore.isClustered: "true"
      org.quartz.jobStore.clusterCheckinInterval: "180000"
      org.quartz.scheduler.instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
      org.quartz.scheduler.instanceName: reportportal

  jpa:
    properties:
      hibernate:
        dialect: com.epam.ta.reportportal.store.commons.JsonbAwarePostgresDialect
        jdbc.lob.non_contextual_creation: true
    generate-ddl: false
    hibernate:
      ddl-auto: none

  rabbitmq:
    addresses: ${rp.amqp.addresses}

server:
  connection-timeout: 30000
  port: 8585
  servlet:
    context-path: "/"

logging:
  level:
    org.hibernate: info
    org.hibernate.stat: info
    org.springframework.security: info
    org.springframework.web.bind: fatal
    com.epam.ta.reportportal.ws.controller: debug
    com.epam.ta.reportportal.ws.rabbit: debug


springfox:
  documentation:
    swagger:
      v2:
        path: /v1/api-docs


#### Custom ReportPortal Properties ######
##########################################
rp:
  environment:
    variable:
      flushing:
        time: PT24H
      clean:
        attach: P3D
        logs: P7D
        launches: P7D
  amqp:
    addresses: amqp://${rp.amqp.user}:${rp.amqp.pass}@${rp.amqp.host}:${rp.amqp.port}
    api-address: http://${rp.amqp.apiuser}:${rp.amqp.apipass}@${rp.amqp.host}:${rp.amqp.apiport}/api
    host: rabbitmq
    port: 5672
    user: rabbitmq
    pass: rabbitmq
    apiport: 15672
    apiuser: rabbitmq
    apipass: rabbitmq
    queues: 10
    queuesPerPod: 10
    reply-timeout: 300000 #milliseconds

  requestLogging: true

  jwt:
    signing-key:

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: ${rp.db.url}
    username: ${rp.db.user}
    password: ${rp.db.pass}
    maximumPoolSize: 27

  db:
    url: jdbc:postgresql://${rp.db.host}:${rp.db.port}/${rp.db.name}
    name: reportportal
    host: postgres
    port: 5432
    user: rpuser
    pass: rppass

  upload:
    maxUploadSize: 128MB
    maxFileSize: 64MB
  analytics:
    enableByDefault: true
  plugins:
    rootDir: /plugins
    path: ${rp.plugins.rootDir}/resolved
    resources:
      path: ${rp.plugins.rootDir}/resources
    temp:
      path: ${rp.plugins.rootDir}/temp
  binarystore:
    path: /data/storage
    minio:
      endpoint: http://play.min.io
      accessKey: Q3AM3UQ867SPQQA43P2F
      secretKey: zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
    # could be one of [seaweed, filesystem, minio]
    type: filesystem
    thumbnail:
      attachment:
        width: 100
        height: 55
      avatar:
        width: 40
        height: 50
