openapi: 3.0.3
x-stoplight:
  id: hpx2e63mc8gcc
info:
  title: Organizations
  version: '0.1'
  description: Organizations API Collection
  contact:
    name: Reingold Shekhtel
    email: reingold_shekhtel@epam.com
servers:
  - url: '{protocol}://{authority}/{basePath}'
    description: ReportPortal server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol
      authority:
        default: demo.reportportal.io
        description: Host name and port (if needed) of Report Portal server
      basePath:
        default: api
        description: Base path of Report Portal API
paths:
  /organizations:
    get:
      summary: Get a list of organizations
      tags:
        - Organizations
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Offset'
                  - x-stoplight:
                      id: nsdfmhu6y0tgj
                    type: object
                    properties:
                      items:
                        x-stoplight:
                          id: p6c0g6dra4c11
                        type: array
                        items:
                          $ref: '#/components/schemas/OrganizationProfile'
                description: The response contains a list of organizations with their metadata.
      operationId: get-organizations
      description: |-
        Get a list of existing organizations.

        ### Authority: 

        - `ADMINISTRATOR`
        - `USER`

        #TODO
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
        - schema:
            type: string
          in: query
          name: name
          description: Filter organizations by name
    post:
      summary: Create a new organization
      operationId: post-organizations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Create a new organization. Provide name and slug.

        ### Authority: 

        - `ADMINISTRATOR`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: |-
          You can create an organization provide name and slug. If the `slug` is not provided, it will be generated from the `name`.
      tags:
        - Organizations
        - Ready for implementation
  '/organizations/{org_id}':
    get:
      summary: Get organization information
      tags:
        - Organizations
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id
      description: |-
        Provide organization information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    put:
      summary: Update organization
      operationId: put-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: hiod6ajoz3rrg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Update organization information with the provided data.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetails'
        description: Provide organization information for update.
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
    patch:
      summary: Partial organization update
      operationId: patch-organizations-org_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: y1kxomqmeigfg
                    default: The organization update was completed successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Particular organization fields update via the [JSON Merge Patch standard](https://datatracker.ietf.org/doc/html/rfc7386).

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                      x-stoplight:
                        id: 6906m5222zvx6
                - $ref: '#/components/schemas/Slug'
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
    delete:
      summary: Delete organization
      operationId: delete-organizations-org_id
      responses:
        '204':
          description: No Content
        '402':
          description: Payment Required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        > **Enterprise edition feature** 
        >
        > Available only if an Organization plugin is enabled.

        Delete organization by identifier.

        ### Authority:

        - `ADMINISTRATOR`
      tags:
        - Organizations
        - Ready for implementation
      x-internal: false
  '/organizations/{org_id}/users':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization's users
      tags:
        - Users
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Offset'
                  - type: object
                    x-stoplight:
                      id: kn7zavpzj9nfz
                    properties:
                      items:
                        type: array
                        x-stoplight:
                          id: niglepk1k2g3s
                        items:
                          $ref: '#/components/schemas/OrganizationUserProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-users
      description: |-
        Provides a list of organzation's users.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
    post:
      summary: Assignment user to organization
      operationId: post-organizations-org_id-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventStatus'
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/EventStatus'
                  - type: object
                    properties:
                      statuses:
                        x-stoplight:
                          id: tv2psyijqtql3
                        type: array
                        description: Statuses for updating projects. This is for cases when a user is assigned projects.
                        items:
                          $ref: '#/components/schemas/EventStatus'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        This is a complex endpoint that provides a flow for assigning a user to the organization.
        It can be used as a bulk endpoint if you provide a list of projects for assignment.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `EDITOR`

        ### Assignment rules

        #### For assignment user to the organization:

        A user with the `MEMBER` role can assign only users with the `MEMBER` role.

        #### For assignment user to the organization's projects:

        A users with the `ADMINISTRATOR`, `MANAGER`, and `MEMBER` with `EDITOR` roles can assign
        users to the organization's projects.

        ### Response event statuses

        You will get different statuses for project assignments according to which user you want
        to assign to the organization:

        - `PENDING` or `FAILURE` for non-existing users.
        - `SUCCESS` or `FAILURE` for existing users.

        Items contain statuses for each event. Inside the event, you can find the `id` that links
        to the identifier you provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserAssignment'
        description: Definition for a user assignment.
      tags:
        - Users
        - Ready for implementation
      x-extension-1: null
  '/organizations/{org_id}/users/{user_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get organization user profile
      tags:
        - Users
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrganizationUserProfile'
                  - $ref: '#/components/schemas/EventStatus'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-users-user_id
      description: |-
        Get organization user profile.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with `MEMBER` role can get only his profile.

        ### Member authority:

        - `EDITOR`
        - `VIEWER`
    put:
      summary: Update organization user details
      operationId: put-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 4rm267zsfzu58
                    default: The user's role in the organization has been updated.
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                allOf:
                  - x-stoplight:
                      id: vz0j5aismjjdv
                    properties:
                      message:
                        type: string
                        x-stoplight:
                          id: qq0wvtnebtzyb
                        default: The user's role in the organization has been updated.
                  - properties:
                      statuses:
                        x-stoplight:
                          id: nxwqi2ot8md9m
                        type: array
                        description: |-
                          Change statuses for projects.
                          For cases when a user is assigned projects.
                        items:
                          $ref: '#/components/schemas/EventStatus'
                type: object
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserDefinition'
        description: Organization user details for update.
      tags:
        - Users
        - Ready for implementation
      description: Update organization user details.
    patch:
      summary: Partial organization user update
      operationId: patch-organizations-org_id-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: zbdjojwwvcpma
                    default: The user's role in the organization has been updated.
        '207':
          description: |-
            Multi-Status (WebDAV)

            Response for a user assignment with projects.
          content:
            application/json:
              schema:
                allOf:
                  - x-stoplight:
                      id: tt0m9r127vs2z
                    properties:
                      message:
                        type: string
                        x-stoplight:
                          id: 6lc772ylkoq6r
                        default: The user's role in the organization has been updated.
                  - x-stoplight:
                      id: ktzksl9dz8ii1
                    properties:
                      statuses:
                        type: array
                        x-stoplight:
                          id: 3ujdjt3ivvssf
                        description: |-
                          Change statuses for projects.
                          For cases when a user is assigned projects.
                        items:
                          $ref: '#/components/schemas/EventStatus'
                type: object
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              allOf:
                - x-stoplight:
                    id: pcco8msr17mge
                  properties:
                    role:
                      type: string
                      x-stoplight:
                        id: ux9njonecvir5
                      enum:
                        - MEMBER
                        - MANAGER
                    projects:
                      type: array
                      x-stoplight:
                        id: s4p0cyzapk47w
                      items:
                        $ref: '#/components/schemas/UserProjectDefinition'
              type: object
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      description: |-
        Partial organization user update.

        You can provide a project list as an additional option for assigning or unassigned
        a user from projects.

        ### Organization authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        ### Project authority:

        - `EDITOR`
      tags:
        - Users
        - Ready for implementation
    delete:
      summary: Unassigned organization user
      operationId: delete-organizations-org_id-users-user_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        Unassigned user from an organization and all organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      tags:
        - Users
        - Ready for implementation
  '/organizations/{org_id}/projects':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get organization projects
      tags:
        - Projects
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Offset'
                  - type: object
                    x-stoplight:
                      id: 98qt8fb088ryy
                    properties:
                      items:
                        type: array
                        x-stoplight:
                          id: dl8caqxxjx971
                        items:
                          $ref: '#/components/schemas/ProjectProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-projects
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
      description: |-
        Get a list of organization projects.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
    post:
      summary: Create a new project
      tags:
        - Projects
        - Ready for implementation
      operationId: post-organizations-org_id-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        Create a new project in the organization. 

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDetails'
  '/organizations/{org_id}/projects/{project_id}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
    get:
      summary: Get project information
      tags:
        - Projects
        - Ready for implementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProfile'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-projects-project_id
      description: |-
        Get project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can get only his project.

        ### Member authority:

        - 'EDITOR'
        - 'VIEWER'
    put:
      summary: Update project
      operationId: put-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDetails'
      description: |-
        Update project information.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Projects
        - Ready for implementation
    patch:
      summary: Partial project update
      operationId: patch-organizations-org_id-projects-project_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfo'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                      x-stoplight:
                        id: mytj6moteu7c7
                - $ref: '#/components/schemas/Slug'
        description: 'Use PATCH with JSON Merge Patch standard, a specialized media type application/merge-patch+json for partial resource representation to update parts of resource objects.'
      description: |-
        Partial project update.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
        - `MEMBER`

        A user with the `MEMBER` role can update only his project.

        ### Member authority:

        - `EDITOR`
      tags:
        - Projects
        - Ready for implementation
    delete:
      summary: Delete project
      tags:
        - Projects
        - Ready for implementation
      operationId: delete-organizations-org_id-projects-project_id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: |-
        Delete project.

        ### Authority:

        - `ADMINISTRATOR`
        - `MANAGER`
  '/organizations/{org_id}/settings':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  retention_policy:
                    $ref: '#/components/schemas/OrganizationRetentionPolicy'
                    x-stoplight:
                      id: 4n046ms2ge4qu
                  notification_policy:
                    $ref: '#/components/schemas/OrganizationNotificationPolicy'
                    x-stoplight:
                      id: n8ngrc31aot6x
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: 'Not Found: Organization not found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-settings
      description: '#TODO'
  '/organizations/{org_id}/settings/{setting_name}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - schema:
          type: string
          enum:
            - retention-policy
            - notification-policy
        name: setting_name
        in: path
        required: true
        description: Specific setting name
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                  - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                    x-stoplight:
                      id: gv3x79uxwj119
                description: '#TODO'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: 'Not Found: Organization or setting not found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      operationId: get-organizations-org_id-settings-setting_name
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 7uyn7ehgi6ovb
              examples:
                Retention policy:
                  value:
                    id: retention-policy
                    status: SUCCESS
                    description: Retention policy updated successfully.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                  x-stoplight:
                    id: 9wm8sten2ueun
          application/xml:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                  x-stoplight:
                    id: 6ce6ly4mx1i8i
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-settings-setting_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: ic96azfhunvje
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrganizationRetentionPolicy'
                - $ref: '#/components/schemas/OrganizationNotificationPolicy'
                  x-stoplight:
                    id: 3ln8ef23j7ncm
      description: '#TODO'
  '/organizations/{org_id}/notification-rules':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Offset'
                    x-stoplight:
                      id: 3d2dowzgaj8l1
                  - type: object
                    properties:
                      items:
                        type: array
                        x-stoplight:
                          id: bx10o84org4sg
                        items:
                          $ref: '#/components/schemas/OrganizationNotifyRule'
                          x-stoplight:
                            id: kcsi3bhqflf5v
      operationId: get-organizations-org_id-notification-rules
      description: '#TODO'
    post:
      summary: '#TODO'
      operationId: post-organizations-org_id-notification-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
  '/organizations/{org_id}/notification-rules/{notify_rule_id}':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: string
        name: notify_rule_id
        in: path
        required: true
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotifyRule'
      operationId: get-organizations-org_id-notifications-rules-rule_id
      description: '#TODO'
    put:
      summary: '#TODO'
      operationId: put-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 925zkivx5dclj
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
      description: '#TODO'
    patch:
      summary: '#TODO'
      operationId: patch-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 8maqxc1fpt87t
      description: '#TODO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
    delete:
      summary: '#TODO'
      operationId: delete-organizations-org_id-notification-rules-notify_rule_id
      responses:
        '204':
          description: No Content
      description: '#TODO'
  '/organizations/{org_id}/plugins':
    parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
    get:
      summary: '#TODO'
      tags:
        - TODO
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    x-stoplight:
                      id: 0f2zwzdi367v0
                    items:
                      $ref: '#/components/schemas/OrganizationPluginInfo'
                      x-stoplight:
                        id: sxyt6xg59r9d9
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-organizations-org_id-plugins
      description: '#TODO'
components:
  schemas:
    OrganizationProfile:
      title: Organization
      x-stoplight:
        id: lzs7p3khz8n9d
      description: A comprehensive set of organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationInfo'
          x-stoplight:
            id: arejror5jwj3n
        - type: object
          x-stoplight:
            id: xxy7z5blvo389
          properties:
            relationships:
              $ref: '#/components/schemas/OrganizationRelation'
              x-stoplight:
                id: lkpinpm5hhpzy
    OrganizationInfo:
      title: Organization
      x-stoplight:
        id: x7vdhfbeaz5pu
      description: Various information about the organization information.
      allOf:
        - $ref: '#/components/schemas/OrganizationDetails'
          x-stoplight:
            id: 64kdwn8nva4jg
        - $ref: '#/components/schemas/OrganizationMetadata'
          x-stoplight:
            id: 2bhjwvbwlhrlb
    OrganizationDetails:
      title: Organization definition
      x-stoplight:
        id: 2gyt1v3d2gfmm
      description: |
        Basic information provided by the client.

        A `slug` is a unique identifying part of an organization. Generated according to the organization name if not specified by the user.
      allOf:
        - type: object
          properties:
            name:
              type: string
              x-stoplight:
                id: dz5igu0m6iy9o
              description: Organization display name.
          required:
            - name
        - $ref: '#/components/schemas/Slug'
          x-stoplight:
            id: cp3h04ftbupxt
    OrganizationMetadata:
      title: Organization metadata
      x-stoplight:
        id: 08jgykhqykh7b
      description: Organization metadata. Represent generated fields.
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Organization ReportPortal identifier.
          minimum: 0
        type:
          type: string
          x-stoplight:
            id: 4nf6lordbrqag
          enum:
            - INTERNAL
            - PERSONAL
            - EXTERNAL
          description: |-
            Type for automatization purposes.

            There are three types:
            - INTERNAL: created by API request.
            - PERSONAL: created for a user after the user creating. Only Enterprise edition feature.
            - EXTERNAL: created for external integrations.
        external_id:
          type: string
          x-stoplight:
            id: m0wvgkfndhpag
          description: |-
            External organization identifier.
            It is created for integration.
        created_at:
          type: string
          x-stoplight:
            id: murxta40l19cz
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          x-stoplight:
            id: wy58s9p7s4l81
          format: date-time
          description: Last update date.
    OrganizationRelation:
      title: Organization relations
      x-stoplight:
        id: mvjaoy2fofepj
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the organization.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        users:
          type: object
          x-stoplight:
            id: krjw7vjy2izad
          description: General information about the organization users.
          properties:
            meta:
              type: object
              x-stoplight:
                id: d6fwspiop6x0l
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: hjzuzo3w0fblt
                  minimum: 0
                  description: Total count of users in the organization.
        projects:
          type: object
          x-stoplight:
            id: ccus3qpgo1r30
          description: General information about the organization projects.
          properties:
            meta:
              type: object
              x-stoplight:
                id: ez4r3fb2cr2ts
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: 1l7k5p1fnlpfv
                  minimum: 0
                  description: Total count of projects in the organization.
        launches:
          type: object
          x-stoplight:
            id: mwmj5j0ckj15e
          description: General information about the organization launches.
          properties:
            meta:
              type: object
              x-stoplight:
                id: s2lmbnao0c7sw
              properties:
                last_occurred_at:
                  type: string
                  x-stoplight:
                    id: l5t9kyok3gjee
                  format: date-time
                  description: Last launch occurrence date.
        billing:
          type: object
          x-stoplight:
            id: 2dmd4f0yulayn
          description: |-
            General information about the organization billing.
            Available only if a Billing plugin is enabled.
          properties:
            meta:
              type: object
              x-stoplight:
                id: kycmg6uetm4ny
              properties:
                plan_name:
                  type: string
                  x-stoplight:
                    id: an0sg4e2taicm
                  description: Plan name.
                storage_usage:
                  type: integer
                  x-stoplight:
                    id: kfsaova2wetdj
                  minimum: 0
                  description: Storage usage in percents.
                  maximum: 100
    OrganizationUserAssignment:
      title: Organization user assignment
      x-stoplight:
        id: do613cpv1l3mq
      allOf:
        - type: object
          x-stoplight:
            id: 2uhe2kffvezvt
          properties:
            email:
              type: string
              x-stoplight:
                id: sufi4vxtjz3kw
              format: email
              description: User email for assignment.
          required:
            - email
        - $ref: '#/components/schemas/OrganizationUserDefinition'
          x-stoplight:
            id: fkz8x6jcbf9uo
      description: Definition for a user assignment to the organization.
    OrganizationUserDefinition:
      title: Organization user definition
      x-stoplight:
        id: u52hc1apf7q2q
      allOf:
        - $ref: '#/components/schemas/OrganizationUserDetails'
        - type: object
          x-stoplight:
            id: nh1gunacinw5v
          properties:
            projects:
              x-stoplight:
                id: 7qf3duno409l9
              type: array
              description: |-
                List of projects for user assignment.
                It's optional; you can assign the user 
                to an organization without projects.
              items:
                $ref: '#/components/schemas/UserProjectDefinition'
                x-stoplight:
                  id: fmzilkgtzpdmu
      description: Base information about a user in an organization.
    OrganizationUserProfile:
      title: Organization user profile
      x-stoplight:
        id: mtgs7v0icru14
      allOf:
        - $ref: '#/components/schemas/OrganizationUserInfo'
        - $ref: '#/components/schemas/UserAccountInfo'
        - type: object
          x-stoplight:
            id: ryd1bkgqoi60r
          properties:
            relationships:
              $ref: '#/components/schemas/OrganizationUserRelation'
      description: A comprehensive set of user information related to a user's organization.
    OrganizationUserInfo:
      title: Organization user information
      x-stoplight:
        id: snwrtcmq8wvt1
      allOf:
        - $ref: '#/components/schemas/OrganizationUserDetails'
        - $ref: '#/components/schemas/OrganizationUserMetadata'
      description: Related information about a user in the organization.
    OrganizationUserDetails:
      title: Organization user details
      x-stoplight:
        id: 5nqrewxfku9tn
      type: object
      description: Basic information about a user in the organization.
      properties:
        role:
          type: string
          x-stoplight:
            id: 3v2e1cyby216c
          enum:
            - MEMBER
            - MANAGER
          description: Organization user role.
      required:
        - role
    OrganizationUserMetadata:
      title: Organization user metadata
      x-stoplight:
        id: g7a81q7nu3zgo
      allOf:
        - x-stoplight:
            id: 3b9125n1gljg0
          properties:
            assigned_at:
              type: string
              x-stoplight:
                id: a7gp7z7wei0p6
              format: date-time
              description: |-
                A time when a user was assigned to
                the organization.
      description: User's organization metadata. Represent generated fields.
      type: object
    OrganizationUserRelation:
      title: Organization user relations
      x-stoplight:
        id: 0v55lmrhzuy8t
      type: object
      description: |-
        A relationship object contains members that represent a relationship of the user in the organization.

        Represents [JSON:API relationships object](https://jsonapi.org/format/#document-resource-object-relationships). We use only `links` and `meta` objects.
      properties:
        projects:
          type: object
          x-stoplight:
            id: liq2focmyttih
          description: User's projects relations.
          properties:
            meta:
              type: object
              x-stoplight:
                id: p06xmlipg4irk
              description: User's projects relation metadata.
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: 3tcj2ts8foup5
                  minimum: 0
                  description: |-
                    Total number of user's projects in
                    organization.
    OrganizationRetentionPolicy:
      title: Organization retention policy
      x-stoplight:
        id: vow5yfxq4xtdk
      type: object
      description: '#TODO'
      properties:
        log_retention_period:
          type: string
          x-stoplight:
            id: yhc9oev3lzd3x
          format: duration
          description: '#TODO'
        launch_retention_period:
          type: string
          x-stoplight:
            id: hgbjw8baqr7pd
          format: duration
          description: '#TODO'
        attachment_retention_period:
          type: string
          x-stoplight:
            id: 64yf88vs0o6pu
          format: duration
          description: '#TODO'
    OrganizationNotificationPolicy:
      title: Organization notification policy
      x-stoplight:
        id: 7n3016fxay9mo
      type: object
      properties:
        auto_notification:
          type: boolean
          x-stoplight:
            id: zi73b396he1hp
    OrganizationNotifyRule:
      title: OrganizationNotificationRule
      x-stoplight:
        id: l4gmpbqm9o282
      allOf:
        - type: object
          properties:
            id:
              type: string
            created_at:
              type: string
              x-stoplight:
                id: wfur0bro7bnox
              format: date-time
            updated_at:
              type: string
              x-stoplight:
                id: pcaygplw12pnq
              format: date-time
        - $ref: '#/components/schemas/OrganizationNotifyRuleDefinition'
          x-stoplight:
            id: e76mwgs2t0lkq
      description: '#TODO'
    OrganizationNotifyRuleDefinition:
      title: Notification rule definition
      x-stoplight:
        id: wzds6axw03vkv
      type: object
      description: '#TODO'
      properties:
        name:
          type: string
          x-stoplight:
            id: pej9yl51jj2rr
          description: '#TODO'
        enabled:
          type: boolean
          x-stoplight:
            id: eljifjwy0myo9
          description: '#TODO'
        conditions:
          type: object
          x-stoplight:
            id: xiq7u96dbyi7c
          description: '#TODO'
          properties:
            launch:
              type: object
              x-stoplight:
                id: prbt6dqyptw5n
              description: '#TODO'
              properties:
                names:
                  type: array
                  x-stoplight:
                    id: oiz4yf9t3fujn
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: 764t84ztffx3b
                    type: string
                attributes:
                  type: array
                  x-stoplight:
                    id: 2y9ubm1ighepk
                  description: '#TODO'
                  items:
                    x-stoplight:
                      id: hjehsaosi9oyp
                    type: object
                    properties:
                      key:
                        type: string
                        x-stoplight:
                          id: 0pxjhtsyoibrf
                      value:
                        type: string
                        x-stoplight:
                          id: vd9a65e08xtu1
                attributes_operator:
                  type: string
                  x-stoplight:
                    id: 0w8fcw4ufcncl
                  enum:
                    - AND
                    - OR
                  default: AND
                  description: '#TODO'
                result_condition:
                  type: string
                  x-stoplight:
                    id: 1icft97s6w96o
                  enum:
                    - ALWAYS
                    - FAILED
                    - TO_INVESTIGATE
                    - MORE_10
                    - MORE_20
                    - MORE_50
                  description: '#TODO'
        actions:
          x-stoplight:
            id: 5kl2r7880cz8x
          allOf:
            - $ref: '#/components/schemas/SendEmail'
          description: '#TODO'
    OrganizationPluginInfo:
      title: Organization plugin info
      x-stoplight:
        id: f0p1ux5joqai3
      type: object
      description: '#TODO'
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          description: '#TODO'
        name:
          type: string
          x-stoplight:
            id: lxowtpinnxi2i
          description: '#TODO'
        description:
          type: string
          x-stoplight:
            id: 5foc3fxle75f8
          description: '#TODO'
        version:
          type: string
          x-stoplight:
            id: ewqbneodpbu0p
          description: '#TODO'
        groups:
          type: array
          x-stoplight:
            id: 78va080k1m3sb
          description: '#TODO'
          items:
            x-stoplight:
              id: qtcmmsrnlarmj
            type: string
            enum:
              - BTS
              - NOTIFICATION
              - OTHER
              - AUTH
        configured:
          type: boolean
          x-stoplight:
            id: 4vy27s8wo5bwc
          description: '#TODO'
        configuration_type:
          type: string
          x-stoplight:
            id: 65cxbgcmfxhq5
          enum:
            - SINGLE
            - MULTIPLE
          description: '#TODO'
        created_at:
          type: string
          x-stoplight:
            id: 83f3uddm8eenm
          format: date-time
          description: '#TODO'
        assets:
          type: object
          x-stoplight:
            id: i89uf139hm8wf
          description: '#TODO'
          properties:
            icon:
              type: string
              x-stoplight:
                id: cw8lbnlyjahri
              default: plugin-icon.svg
            main:
              type: string
              x-stoplight:
                id: acbh0e2bjrti9
            descriptor:
              type: string
              x-stoplight:
                id: 2cknhgw03bsi3
              default: metadata.json
        links:
          type: object
          x-stoplight:
            id: jx9xyfsbbbs9k
          description: '#TODO'
          properties:
            source:
              $ref: '#/components/schemas/Link'
              x-stoplight:
                id: u0pr0q2rpkozk
            documentation:
              $ref: '#/components/schemas/Link'
              x-stoplight:
                id: 6f373e4upi8rr
        commands:
          type: object
          x-stoplight:
            id: 5jh368p3nqpdr
          description: '#TODO'
          properties:
            common:
              type: array
              x-stoplight:
                id: 4fd17ylx0o3vc
              items:
                x-stoplight:
                  id: fpjdzs8czm0sz
                type: string
            allowed:
              type: array
              x-stoplight:
                id: 0da3mv1exbd80
              items:
                x-stoplight:
                  id: lndqx1s8gomqe
                type: string
        details:
          type: object
          x-stoplight:
            id: carch0mzjh2dl
          description: '#TODO Legasy'
          properties:
            meta:
              type: object
              x-stoplight:
                id: ln7j1pvb10qm5
              description: '#TODO'
    EventStatus:
      title: Event status
      x-stoplight:
        id: c0yfyurojnb6b
      type: object
      properties:
        id:
          type: string
          description: Identifier of a request item.
        status:
          type: string
          x-stoplight:
            id: nmyb8koi7rsju
          description: |-
            Field indicating the execution status of
            the request item.

            The status can be one of the following:

            * "SUCCESS" 
            * "FAILURE" 
            * "PENDING"
          enum:
            - SUCCESS
            - FAILURE
            - PENDING
        description:
          type: string
          x-stoplight:
            id: n1yxnyalgcqw8
          description: |-
            Human readable status description and containing additional
                          context information about failures etc.
      required:
        - id
        - status
      description: |-
        Event status object used to represent the status of a request item in
        bulk operations.

        The status can be one of the following:

        * "SUCCESS" - The request item was successfully processed.
        * "FAILURE" - The request item failed to be processed.
        * "PENDING" - The request item is still pending processing.
    Link:
      x-stoplight:
        id: u0pr0q2rpkozk
      title: Hypermedia Link
      type: object
      description: |-
        Allows clients to dynamically follow the hypermedia links to quickly navigate to the relevant resources.

        Uses for Hypermedia as the Engine of Application State (HATEOAS).

        Represents the [JSON:API link object](https://jsonapi.org/format/#auto-id--link-objects) and accepts `Web linking` as the de-facto datamodel.
      properties:
        href:
          type: string
          x-stoplight:
            id: ntmqhhrrepqgz
          format: uri
          description: The target resource URI reference.
        rel:
          type: string
          x-stoplight:
            id: wp97no7q9ua6m
          description: The link relation type describes how the current context is related to the target resource.
      required:
        - href
    Offset:
      type: object
      x-stoplight:
        id: a779774cbed57
      title: Offset-based
      description: Offset-based pagination
      properties:
        offset:
          type: integer
          description: The offset used for this page of results.
          minimum: 0
          x-stoplight:
            id: z9jg7o4fe4jkn
          default: 0
        limit:
          type: integer
          description: The limit used for this page of results. This will be the same as the limit query parameter unless it exceeded the maximum value allowed for this API endpoint.
          minimum: 0
          x-stoplight:
            id: i0krz9nwy1ndt
          default: 10
        total_count:
          type: integer
          description: One greater than the offset of the last item in the entire collection. The total number of items in the collection may be less than total_count.
          minimum: 0
          x-stoplight:
            id: e0em1vnu8tj4a
        sort:
          type: string
          description: Field to define the sort field.
          x-stoplight:
            id: 7oyq1tomalge1
        order:
          type: string
          description: To indicate sorting direction. Ascending or Descending.
          enum:
            - ASC
            - DESC
          x-stoplight:
            id: 77qo4i7sq47x6
        items:
          type: array
          x-stoplight:
            id: qkgi498bvvex6
          items:
            x-stoplight:
              id: dsgodc8fbfyfo
      required:
        - offset
        - limit
        - items
    Problem:
      title: Problem
      x-stoplight:
        id: gyqkvejezmctb
      type: object
      description: |-
        Problem Details for HTTP APIs [RFC 9457](https://tools.ietf.org/html/rfc9457).

        A Problem JSON object uses the media type `application/problem+json`.
      properties:
        type:
          type: string
          format: uri-reference
          description: |
            A URI reference that uniquely identifies the problem type only in the context of the provided API. Opposed to the specification in RFC-9457, it is neither recommended to be dereferenceable and point to a human-readable documentation nor globally unique for the problem type.
          default: 'about:blank'
          example: /problems/user-authorization-failed
        title:
          type: string
          description: |
            A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some title for the error situation
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          exclusiveMaximum: true
          maximum: 600
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem that is helpful to locate the problem and give advice on how to proceed. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some description for the error situation
        instance:
          type: string
          format: uri-reference
          description: |
            A URI reference that identifies the specific occurrence of the problem, e.g. by adding a fragment identifier or sub-path to the problem type. May be used to locate the root of this problem in the source code.
          example: /some/uri-reference#specific-occurrence-context
    Slug:
      title: URL Slug
      x-stoplight:
        id: b6ibm3dgtik3q
      type: object
      description: |-
        A slug is used to identify a resource.
        It should be unique and contain only lowercase letters, numbers, and hyphens.
        It should not start or end with a hyphen.
      properties:
        slug:
          type: string
          x-stoplight:
            id: z0ol4urqp54ye
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          description: |-
            A slug is used to identify a resource.
            It should be unique and contain only lowercase letters, numbers, and hyphens.
            It should not start or end with a hyphen.
    SendEmail:
      title: Send email
      x-stoplight:
        id: xoejj8r69bn6v
      type: object
      description: This action sends an email notification to specified recipients.
      properties:
        send_email:
          type: object
          x-stoplight:
            id: 4xboe08wgwq4e
          properties:
            recipients:
              type: array
              x-stoplight:
                id: 9b466jl0rrifs
              format: email
              items:
                x-stoplight:
                  id: ktbfxcl3noef5
                type: string
                format: email
            subject:
              type: string
              x-stoplight:
                id: epnthaasf0t2f
            body:
              type: string
              x-stoplight:
                id: oeg15tp6q5lxr
    ProjectDetails:
      title: Project details
      x-stoplight:
        id: 8xas9tgve4cfk
      allOf:
        - type: object
          properties:
            name:
              type: string
              x-stoplight:
                id: ia7sekdpu4yac
              description: Display project name.
          required:
            - name
        - $ref: '#/components/schemas/Slug'
          x-stoplight:
            id: eac9sdm2tal7x
    ProjectInfo:
      title: ProjectInfo
      x-stoplight:
        id: 0938dyxh8tyrr
      allOf:
        - $ref: '#/components/schemas/ProjectDetails'
        - $ref: '#/components/schemas/ProjectMetadata'
          x-stoplight:
            id: j28j90a73icbd
    ProjectMetadata:
      x-stoplight:
        id: j28j90a73icbd
      title: ProjectMetadata
      type: object
      properties:
        id:
          type: integer
          description: Project internal identifier.
          format: int64
          minimum: 0
        key:
          type: string
          x-stoplight:
            id: 9up0sba6ni0se
          description: |-
            Unique identifying part of a project in
            an instance.
            Generated from an organization
            slug and project slug.
        organization_id:
          type: integer
          x-stoplight:
            id: yeosbd661wv1h
          format: int64
          description: Organization ID to which the project belongs.
          minimum: 0
        created_at:
          type: string
          x-stoplight:
            id: jvvpxawexlff9
          format: date-time
          description: Timestamp when project was created.
        updated_at:
          type: string
          x-stoplight:
            id: 16yiiuxiokhiu
          format: date-time
          description: Timestamp when project was last updated.
    ProjectProfile:
      title: Project profile
      x-stoplight:
        id: ur5ebd3h35b5c
      allOf:
        - $ref: '#/components/schemas/ProjectInfo'
        - type: object
          x-stoplight:
            id: zjk54j90siijv
          properties:
            relationships:
              $ref: '#/components/schemas/ProjectRelation'
              x-stoplight:
                id: g4mai64rch5zv
      description: Comprehensive information about a project.
    ProjectRelation:
      x-stoplight:
        id: g4mai64rch5zv
      title: Project relationships
      type: object
      description: Information about the relationships of a project.
      properties:
        users:
          type: object
          x-stoplight:
            id: rl9rn3uem2lqr
          description: Users assigned to the project.
          properties:
            meta:
              type: object
              properties:
                count:
                  type: integer
                  x-stoplight:
                    id: wx82090xc31qx
                  minimum: 0
                  description: Total number of users assigned to the project.
        launches:
          type: object
          x-stoplight:
            id: hgjhfk60prehs
          description: Launches associated with the project.
          properties:
            meta:
              type: object
              properties:
                last_occurred_at:
                  type: string
                  x-stoplight:
                    id: gbpfmzgfwob1f
                  description: The date and time of the last launch occurred in the project.
                  format: date-time
        billing:
          type: object
          x-stoplight:
            id: 379ot3sc3y00i
          description: Billing information of the project. Available only if the billing plugin is enabled.
          properties:
            meta:
              type: object
              properties:
                storage_usage:
                  type: integer
                  x-stoplight:
                    id: sey5prxc3ttr1
                  minimum: 0
                  maximum: 100
                  description: The percentage of storage used by the project.
    ProjectUserDetails:
      x-stoplight:
        id: 0new1li2b8uld
      title: Project user details
      type: object
      description: |-
        There are the following roles:

        - `EDITOR` is a full-access role for the project. By default, all users with a `MANAGER` role have the `EDITOR` role.
        - `VIEWER` is a base role for members. Provides a read-only permission.
        - `null` is a state you can use to unassign a user from the project.
      properties:
        role:
          type: string
          nullable: true
          x-stoplight:
            id: k7uxpi9vxvg0g
          enum:
            - EDITOR
            - VIEWER
          description: User role in the project.
    UserAccountInfo:
      title: User account info
      x-stoplight:
        id: 2a6cm6zrojhcx
      allOf:
        - $ref: '#/components/schemas/UserDetails'
          x-stoplight:
            id: cd9fv44a7d4pj
        - $ref: '#/components/schemas/UserMetadata'
          x-stoplight:
            id: m12gn4c2iqhp1
    UserDetails:
      x-stoplight:
        id: cd9fv44a7d4pj
      title: User details
      description: |-
        Contains details associated with a user account.

        User has a unique email address, full name, and account type.

        Account type can be either `ADMIN` or `USER`.
        Only `ADMIN` users have access to change account type.
      type: object
      properties:
        email:
          type: string
          x-stoplight:
            id: anq98fsmeahvn
          format: email
          description: User email.
        full_name:
          type: string
          x-stoplight:
            id: t3xotuhofwfex
          description: User full name.
        type:
          type: string
          x-stoplight:
            id: 7xz0ez36bzmr7
          enum:
            - ADMIN
            - USER
          description: Instance account type.
    UserMetadata:
      x-stoplight:
        id: m12gn4c2iqhp1
      title: User metadata
      type: object
      properties:
        id:
          type: integer
          x-stoplight:
            id: g3b344eju3s69
          format: int64
          description: User internal identifier.
          minimum: 0
        created_at:
          type: string
          x-stoplight:
            id: j6yblknliqi00
          format: date-time
          description: When user's account was created.
        updated_at:
          type: string
          x-stoplight:
            id: 88lji1tkyif14
          format: date-time
          description: When user's data was modifed.
        last_login_at:
          type: string
          x-stoplight:
            id: 9426kkbzmqjvl
          format: date-time
          description: When user last logged in.
    UserProjectDefinition:
      title: User's project details
      x-stoplight:
        id: c6ouurwz290zv
      allOf:
        - type: object
          x-stoplight:
            id: 4kgvm161hzvtr
          properties:
            id:
              type: integer
              x-stoplight:
                id: f7stmdjdqi95y
              format: int64
              description: Project internal identifier.
              minimum: 0
        - $ref: '#/components/schemas/Slug'
          x-stoplight:
            id: mq0kagsd2m7tg
        - $ref: '#/components/schemas/ProjectUserDetails'
          x-stoplight:
            id: 0new1li2b8uld
      description: Information about user's project.
  parameters:
    OrganizationId:
      name: org_id
      in: path
      required: true
      schema:
        type: string
      description: Organization identifier
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: string
        default: '10'
      description: The limit used for this page of results. This will be the same as the limit query parameter unless it exceeded the maximum value allowed for this API endpoint
    Offset:
      name: offset
      in: query
      required: false
      schema:
        type: string
        default: '0'
      description: The offset used for this page of results
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: Indicate sort by field
    Order:
      name: order
      in: query
      required: false
      schema:
        type: string
      description: Indicate sorting direction
    UserId:
      name: user_id
      in: path
      required: true
      schema:
        type: string
      description: User identifier
    ProjectId:
      name: project_id
      in: path
      required: true
      schema:
        type: string
      description: Project identifier
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: ''
tags:
  - name: Organizations
  - name: Projects
  - name: Ready for implementation
  - name: Users
security:
  - BearerAuth: []
