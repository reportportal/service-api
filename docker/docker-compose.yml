## You can generate a custom docker compose file automatically on http://reportportal.io/download (Step 2)

## This is example of Docker Compose for ReportPortal
## Do not forget to configure data volumes for production usage

## Execute 'docker-compose -p reportportal up -d --force-recreate'
## to start all containers in daemon mode
## Where:
##      '-p reportportal' -- specifies container's prefix (project name)
##      '-d' -- enables daemon mode
##      '--force-recreate' -- forces re-recreating of all containers

version: '2'

services:

  rabbitmq:
    image: rabbitmq:3
    ports:
       - "5672:5672"
    hostname: redis-host

  postgres:
    image: postgres:10.1-alpine
    environment:
      POSTGRES_USER: rpuser
      POSTGRES_PASSWORD: rppass
      POSTGRES_DB: reportportal
    volumes:
      - reportportal-database:/var/lib/postgresql/data
    restart: on-failure
  # If you need to access the DB locally. Could be a security risk to expose DB.
    ports:
       - "5432:5432"

# start seaweedfs master
  seaweed-master:
    image: chrislusf/seaweedfs
    ports:
       - 9333:9333
    command: master

# start seaweedfs volume
  seaweed-volume:
    image: chrislusf/seaweedfs
    depends_on:
      - seaweed-master
    ports:
       - 7001:7001
    command: volume -max=5 -mserver="seaweed-master:9333" -port=7001
    links:
      - seaweed-master

  api:
    image: service-api:develop
    depends_on:
      - postgres
      - rabbitmq
      - seaweed-volume
    environment:
      - JAVA_OPTS=-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp
      - RABBIT_HOST=rabbitmq
      - DATASTORE_MASTER_HOST=seaweed-master
      - DATASTORE_TYPE=seaweed
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/reportportal
    restart: always
    ports:
       - "8585:8585"

volumes:
  reportportal-database: