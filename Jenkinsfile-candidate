#!groovy
properties([
        parameters ([
                string(
                        name: "VERSION",
                        defaultValue: "",
                        description: "Release candidate version tag"
                ),
                string(
                        name: "BRANCH",
                        defaultValue: "",
                        description: "Specify the GitHub branch from which the image will be built"
                )
        ])
])

node {

    load "$JENKINS_HOME/jobvars.env"

    env.JAVA_HOME = "${tool 'openjdk-11'}"
    env.PATH = "${env.JAVA_HOME}/bin:${env.PATH}"

    stage('Checkout') {
        checkout scm
    }

    stage('Assemble') {
        sh "./gradlew clean assemble -P buildNumber=${env.BUILD_NUMBER}"
    }

    stage('Test') {
        sh './gradlew test --full-stacktrace'
    }

    stage('Build') {
        sh './gradlew build -x test'
    }

    stage('Push to ECR') {
        withEnv(["AWS_URI=${AWS_URI}", "AWS_REGION=${AWS_REGION}", "TAG=${VERSION}"]) {
            def image = env.AWS_URI + '/service-api:' + env.TAG + '-RC-' + env.BUILD_NUMBER
            def url = 'https://' + env.AWS_URI
            def credentials = 'ecr:' + env.AWS_REGION + ':aws_credentials'
            sh './gradlew buildDocker -P dockerTag=$AWS_URI/service-api:$VERSION-RC-$BUILD_NUMBER'
            docker.withRegistry(url, credentials) {
                docker.image(image).push()
            }
        }
    }

    stage('Cleanup') {
        withEnv(["AWS_URI=${AWS_URI}"]) {
            sh 'docker rmi $AWS_URI/service-api:$VERSION-RC-$BUILD_NUMBER'
        }
    }
}
