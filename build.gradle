import org.owasp.dependencycheck.reporting.ReportGenerator

/*
 * Copyright 2019 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        dependencies {
            if (project.hasProperty('sealightsSession')) {
                classpath 'io.sealights.on-premise.agents.plugin:sealights-gradle-plugin:latest.release'
            }
        }
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'java'
    id "org.owasp.dependencycheck" version "5.2.0"
}

apply from: 'project-properties.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-docker.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-commons.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-info.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/release-service.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/copy-database-scripts.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-quality.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/jacoco.gradle'
apply from: 'sealights.gradle'


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url "http://jasperreports.sourceforge.net/maven2" }
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts" }
    maven { url 'https://jitpack.io' }
}

dependencyManagement {
    imports {
        mavenBom "com.github.reportportal:commons-bom:f060f9c"
    }
}

dependencies {
    if (releaseMode) {
        compile 'com.epam.reportportal:commons-dao:5.0.0-RC-2'
        compile 'com.epam.reportportal:commons-rules:5.0.0-BETA-6'
        compile 'com.epam.reportportal:commons-model:5.0.0-RC-1'
        compile 'com.epam.reportportal:commons:5.0.0-BETA-2'
        compile 'com.epam.reportportal:plugin-api:5.0.0-RC-1'
    } else {
        compile 'com.github.reportportal:commons-dao:0a6bd68'
        compile 'com.github.reportportal:commons-rules:5.0.0-BETA-6'
        compile 'com.github.reportportal:commons-model:c56ac54'
        compile 'com.github.reportportal:commons:5.0.0-BETA-2'
        compile 'com.github.reportportal:plugin-api:40d7f90'
    }

    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-quartz'
    compile 'org.springframework.boot:spring-boot-starter-freemarker'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile("org.springframework.boot:spring-boot-starter-amqp")
    // Optional for spring-boot-starter-amqp
    compile "com.rabbitmq:http-client:2.1.0.RELEASE"

    compile 'com.sun.mail:javax.mail:1.6.2'
    compile 'net.sf.jasperreports:jasperreports:6.10.0'
    compile 'io.springfox:springfox-swagger2'

    ///// Security
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'
    compile 'org.springframework.security:spring-security-jwt:1.0.11.RELEASE'
    compile 'org.springframework.security:spring-security-acl'
    compile 'com.github.ben-manes.caffeine:caffeine:2.8.0'

    // Metrics
    compile 'io.micrometer:micrometer-registry-prometheus:1.3.1'

//    JasperReport's export to XLS uses Apache POI. Reports 6.3.1 needs version NOT
//    higher than 3.14 since 3.15 contains breaking API changes
//    compile 'org.apache.poi:poi:4.1.0'

//  Tests
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.flywaydb.flyway-test-extensions:flyway-spring-test:6.0.0'
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

dependencyCheck {
    formats = [ReportGenerator.Format.HTML, ReportGenerator.Format.XML]
//    cveValidForHours = 1
}

bootJar {
    if (!releaseMode) {
        getArchiveFileName().set("${getArchiveBaseName().get()}.${getArchiveExtension().get()}")
    }
}

jar {
    enabled = true
}

test {
    useJUnitPlatform()
    maxParallelForks = 1
    testLogging {
        events = ['failed']
        exceptionFormat = 'short'
    }
    reports {
        junitXml.enabled = true
    }
}

jar.dependsOn gitInfo
processResources.dependsOn gitInfo
prepareDockerfile.dependsOn build
buildDocker.dependsOn prepareDockerfile
addDockerfileToGit.dependsOn releaseDockerfile
updateVersion.dependsOn removeDockerfileFromGit
beforeReleaseBuild.dependsOn addDockerfileToGit
afterReleaseBuild.dependsOn bintrayUpload
checkCommitNeeded.dependsOn removeScripts
test.dependsOn copyTestDatabaseScripts
build.dependsOn jacocoTestReport

